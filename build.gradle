plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'br.inatel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	implementation 'org.springframework.boot:spring-boot-devtools:2.7.3'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.9.1'
	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	implementation 'com.auth0:java-jwt:4.0.0'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.3'




	// https://mvnrepository.com/artifact/io.rest-assured/spring-mock-mvc
	testImplementation 'io.rest-assured:spring-mock-mvc:5.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testImplementation 'org.springframework.security:spring-security-test:5.7.3'

}

// Add these START
bootJar {
	archiveClassifier.set('boot')
}

jar {
	archiveClassifier.set('')
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport{
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
		html.enabled true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"br/inatel/thisismeapi/TimeApplication.class",
					"br/inatel/thisismeapi/config/ValidationConfig.class",
					"br/inatel/thisismeapi/security/**"
			])
		}))
	}

	finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			limit {
				minimum = 0.7
			}
		}
	}
}